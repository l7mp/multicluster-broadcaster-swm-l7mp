apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: broadcaster-MYREGION
spec:
  #replicas: 3
  serviceName: broadcaster-headless
  selector:
    matchLabels:
      app: broadcaster
  template:
    metadata:
      labels:
        app: broadcaster
    spec:
      containers:
        - name: broadcaster
          image: ghcr.io/l7mp/multicluster-broadcaster-swm-l7mp/k8s_broadcaster:0.0.1
          ports:
            - name: http
              containerPort: 4000
              protocol: TCP
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: DISTRIBUTION_MODE
              value: k8s
            - name: K8S_SERVICE_NAME
              value: broadcaster-headless
            - name: ICE_SERVER_URL
              value: turn:MYREGION.broadcaster.stunner.cc:3478?transport=udp
            - name: ICE_SERVER_USERNAME
              value: user-1
            - name: ICE_SERVER_CREDENTIAL
              value: pass-1
            - name: ICE_TRANSPORT_POLICY
              value: relay
            - name: ICE_PORT_RANGE
              value: 51000-52000
            - name: SECRET_KEY_BASE
              value: u1gYGbDNgA5RwdKGFe9CdK+5qLCVROAHZAFPgUVlcmjTEGdvpXqgYW9qFjLQvxZO
            - name: PHX_HOST
              value: MYREGION.broadcaster.stunner.cc
            - name: ADMIN_USERNAME
              value: admin
            - name: ADMIN_PASSWORD
              value: admin
            - name: WHIP_TOKEN
              value: token
            - name: C0
              value: "GLOBAL;https://global.broadcaster.stunner.cc/"
            - name: C1
              value: "USWEST;https://us-west.broadcaster.stunner.cc/"
            - name: C2
              value: "GER;https://germany.broadcaster.stunner.cc/"
            - name: C3
              value: "SIN;https://singapore.broadcaster.stunner.cc/"
            - name: CHECK_ORIGIN
              value: "false"
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.cilium.io/global: "true"
    service.cilium.io/global-sync-endpoint-slices: "true"
  name: broadcaster-headless
spec:
  selector:
    app: broadcaster
  type: ClusterIP
  clusterIP: None
---
apiVersion: v1
kind: Service
metadata:
  name: broadcaster
  labels:
    app: broadcaster
spec:
  ports:
  - port: 4000
    targetPort: 4000
    protocol: TCP
    name: http
  selector:
    app: broadcaster
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: dns-challange
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
  name: broadcaster-ingress
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - MYREGION.broadcaster.stunner.cc
    secretName: broadcaster-tls
  rules:
  - host: MYREGION.broadcaster.stunner.cc
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: broadcaster
            port:
              number: 4000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: dns-challange
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
  name: global-broadcaster-ingress
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - global.broadcaster.stunner.cc
    secretName: global-tls
  rules:
  - host: global.broadcaster.stunner.cc
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: broadcaster
            port:
              number: 4000